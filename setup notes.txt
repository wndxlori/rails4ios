New notes sept 2012
===================

curl -L get.rvm.io | bash -s stable --ruby --rails

gives the following versions:

ruby-1.9.3-p385
rails-3.2.12


Rails Good Parts Ex 1
============================

postgresapp.com download and install (don't run from Desktop or Downloads.  Stop it, move to Applications)

PATH="/Applications/Postgres.app/Contents/MacOS/bin:$PATH"
xcode-select -switch /Applications/Xcode.app  <---- if you have multiple versions of Xcode, point to the right one

rvm use 1.9.3

rails new FieldTripServer -d postgresql --skip-bundle

cd FieldTripServer

gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/MacOS/bin/pg_config  (uninstall if you failed at this before, and start fresh)

google for rails postgres tutorial if you would like more information

bundle

psql
\q

edit database.yml
change username to your Mac account name, for development and test at least

rake db:create

migration for school
rails generate scaffold school board:string category:string school_type:string name:string address:string city:string province:string postal_code:string grades:string ecs:boolean

rake db:migrate

rails s

localhost:3000/schools

create a school (and delete)

seeds.db to load the data

git config --global core.excludesfile ~.gitignore_global

put .DS_Store in it

(Install heroku tool belt)

See https://devcenter.heroku.com/articles/git

heroku create
git remote -v
git push heroku master

++++++++++
Counting objects: 88, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (78/78), done.
Writing objects: 100% (88/88), 41.91 KiB, done.
Total 88 (delta 2), reused 0 (delta 0)
-----> Ruby/Rails app detected
-----> Installing dependencies using Bundler version 1.3.0.pre.5
       Running: bundle install --without development:test --path vendor/bundle --binstubs vendor/bundle/bin --deployment
       Fetching gem metadata from https://rubygems.org/.
       Error Bundler::HTTPError during request to dependency API
       Fetching full source index from https://rubygems.org/
       Installing rake (10.0.3)
       Installing i18n (0.6.1)
       Installing multi_json (1.6.1)
       Installing activesupport (3.2.12)
       Installing builder (3.0.4)
       Installing activemodel (3.2.12)
       Installing erubis (2.7.0)
       Installing journey (1.0.4)
       Installing rack (1.4.5)
       Installing rack-cache (1.2)
       Installing rack-test (0.6.2)
       Installing hike (1.2.1)
       Installing tilt (1.3.3)
       Installing sprockets (2.2.2)
       Installing actionpack (3.2.12)
       Installing mime-types (1.21)
       Installing polyglot (0.3.3)
       Installing treetop (1.4.12)
       Installing mail (2.4.4)
       Installing actionmailer (3.2.12)
       Installing arel (3.0.2)
       Installing tzinfo (0.3.35)
       Installing activerecord (3.2.12)
       Installing activeresource (3.2.12)
       Installing coffee-script-source (1.4.0)
       Installing execjs (1.4.0)
       Installing coffee-script (2.2.0)
       Installing rack-ssl (1.3.3)
       Installing json (1.7.7)
       Installing rdoc (3.12.1)
       Installing thor (0.17.0)
       Installing railties (3.2.12)
       Installing coffee-rails (3.2.2)
       Installing jquery-rails (2.2.1)
       Installing pg (0.14.1)
       Using bundler (1.3.0.pre.5)
       Installing rails (3.2.12)
       Installing sass (3.2.5)
       Installing sass-rails (3.2.6)
       Installing uglifier (1.3.0)
       Your bundle is complete! It was installed into ./vendor/bundle
       Post-install message from rdoc:
       Depending on your version of ruby, you may need to install ruby rdoc/ri data:
       <= 1.8.6 : unsupported
       = 1.8.7 : gem install rdoc-data; rdoc-data --install
       = 1.9.1 : gem install rdoc-data; rdoc-data --install
       >= 1.9.2 : nothing to do! Yay!
       Cleaning up the bundler cache.
-----> Writing config/database.yml to read from DATABASE_URL
-----> Preparing app for Rails asset pipeline
       Running: rake assets:precompile
       Asset precompilation completed (13.30s)
-----> Rails plugin injection
       Injecting rails_log_stdout
       Injecting rails3_serve_static_assets
-----> Discovering process types
       Procfile declares types      -> (none)
       Default types for Ruby/Rails -> console, rake, web, worker
-----> Compiled slug size: 9.0MB
-----> Launching... done, v6
       http://boiling-spire-7767.herokuapp.com deployed to Heroku

To git@heroku.com:boiling-spire-7767.git
 * [new branch]      rails-good-parts-ex1 -> master
++++++++++

http://stackoverflow.com/questions/8786564/cannot-push-to-heroku-because-key-fingerprint

Keep rails app in separate project (from your iOS app) for heroku

Need to: 
heroku run rake db:migrate 
heroku run rake db:seed


Now do Rails API
================
 * http://www.arailsdemo.com/posts/30 <-- grape api http basic auth
 * http://code.dblock.org/grape-trapping-all-exceptions-within-the-api <--- grape api error handling
 * https://github.com/intridea/grape

add to Gemfile

gem 'grape'

bundle

Installing backports (2.6.7) 
Installing descendants_tracker (0.0.1) 
Installing hashie (1.2.0) 
Installing multi_xml (0.5.3) 
Installing rack-accept (0.4.5) 
Installing rack-mount (0.8.3) 
Installing virtus (0.5.4) 
Installing grape (0.2.6) 

in app/api/field_trip_server/api.rb do:

class FieldTripServer::API < Grape::API
  version 'v1', :using => :header, :vendor => 'rails4ios'
end

in config/application.rb

    config.paths.add "app/api", :glob => "**/*.rb"
    config.autoload_paths += Dir["#{Rails.root}/app/api/*"]

in config/routes.rb

mount FieldTripServer::API => '/api'


$ rake routes
              schools GET    /schools(.:format)          schools#index
                      POST   /schools(.:format)          schools#create
           new_school GET    /schools/new(.:format)      schools#new
          edit_school GET    /schools/:id/edit(.:format) schools#edit
               school GET    /schools/:id(.:format)      schools#show
                      PUT    /schools/:id(.:format)      schools#update
                      DELETE /schools/:id(.:format)      schools#destroy
field_trip_server_api        /api                        FieldTripServer::API

Add schools to the API

resource :schools do  get :list do    School.all  endend  
Go to:

http://localhost:3000/api/schools/list.json

AFNetworking
============

Basic auth

    http_basic do |user, password|      user == "course" && password == "password"    end

rails generate scaffold FieldTrip name:string school:references

rake db:migrate

POST api for field trips:

!!!!!!!!!!!!!!!!!!!!!!!<insert good stuff here>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Bootstrapping
=============

add to gemfile:

gem 'less-rails'
gem 'less-rails-bootstrap'

and uncomment therubyracer

instead of ‘sass-rails’
also comment out coffeerails, because we aren't going to use it

bundle

in Stylesheets


rename schools.css.scss to schools.css.less
also scaffold
delete schools.js.coffee

Add to application.css
 *= require twitter/bootstrap

then add “class=‘table table-striped’” to the scaffold table
(see twitter.github.com/bootstrap/components.html)
change scaffold index buttons to “btn btn-primary” , “btn btn-info”, “btn btn-danger”

next steps

application layout

<div class="container">
  <%= yield %>
</div>

(then switch to container-fluid because it looks better)

Also, dup the "New School" link to the top of the table.

Update the school form

<%= form_for(@school, html: {class: 'form-horizontal'}) do |f| %>
  <% if @school.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@school.errors.count, "error") %> prohibited this school from being saved:</h2>

      <ul>
      <% @school.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="control-group">
    <%= f.label :board, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :board %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :category, class: "control-label"  %>
    <div class="controls">
      <%= f.text_field :category %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :school_type, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :school_type %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :name, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :name %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :address, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :address %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :city, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :city %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :province, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :province %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :postal_code, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :postal_code %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :grades, class: "control-label" %>
    <div class="controls">
      <%= f.text_field :grades %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :ecs, class: "control-label" %>
    <div class="controls">
      <%= f.check_box :ecs %>
    </div>
  </div>
  <div class="control-group">
    <div class="controls">
      <div class="actions">
        <%= f.submit class: "btn btn-success" %>
      </div>
    </div>
  </div>
<% end %>

add

 class='hidden-phone'

to all the columns in the schools table that should be hidden on the form
http://twitter.github.com/bootstrap/scaffolding.html#responsive


theme it with bootswatch.com, then

 gem 'less-rails-bootswatch'

(Some problems here.  Remove all the less-rails lines from the Gemfile.lock and run bundle again to clear it up)

bootswatch-theme.css.less

@import "twitter/bootstrap";
@import "twitter/bootstrap/responsive";
//@import "bootswatch/spruce/bootswatch";
//@import "bootswatch/spruce/variables";
@import "bootswatch/cerulean/bootswatch";
@import "bootswatch/cerulean/variables";

body {
  margin-top: 45px;
}

add some navigation

<div class="navbar navbar-fixed-top">
  <div class="navbar-inner">
      <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </a>
      <a class="brand" href="../">Calgary School FieldTrips</a>
      <div class="nav-collapse" id="main-menu">
        <ul class="nav">
          <li><%= link_to "Schools", schools_path %></li>
          <li><%= link_to "Field Trips", field_trips_path %></li>
        </ul>
      </div>
  </div>
</div>


===========================================================


